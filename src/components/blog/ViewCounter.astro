---
interface Props {
  slug: string;
  showIcon?: boolean;
  className?: string;
}

const { 
  slug, 
  showIcon = true,
  className = "text-sm text-gray-500 dark:text-gray-400 flex items-center gap-1"
} = Astro.props;
---

<!-- El componente ahora no muestra nada -->
<span class="hidden" data-view-counter data-slug={slug}>
  <span class="view-count">0</span>
</span>

<script>
  // Mantenemos el script para que siga registrando las vistas en localStorage
  // pero ya no actualizamos la interfaz visible
  
  // Constante para la clave de localStorage
  const VIEW_STORAGE_KEY = 'blog-post-views';
  
  // Funci칩n para obtener conteo de vistas
  function getViewCount(slug: string) {
    if (typeof localStorage === 'undefined') return 0;
    
    try {
      const viewData = localStorage.getItem(VIEW_STORAGE_KEY);
      if (!viewData) return 0;
      
      const counts = JSON.parse(viewData);
      return counts[slug] || 0;
    } catch (error) {
      console.error('Error al obtener conteo de vistas:', error);
      return 0;
    }
  }
  
  // Funci칩n para incrementar conteo de vistas
  function incrementViewCount(slug: string) {
    if (typeof localStorage === 'undefined') return 0;
    
    try {
      const viewData = localStorage.getItem(VIEW_STORAGE_KEY);
      const counts = viewData ? JSON.parse(viewData) : {};
      
      const newCount = (counts[slug] || 0) + 1;
      counts[slug] = newCount;
      
      localStorage.setItem(VIEW_STORAGE_KEY, JSON.stringify(counts));
      return newCount;
    } catch (error) {
      console.error('Error al incrementar conteo de vistas:', error);
      return 0;
    }
  }
  
  // Actualizar los contadores (ahora invisible para el usuario)
  function updateViewCounters() {
    const counters = document.querySelectorAll('[data-view-counter]');
    
    counters.forEach(counter => {
      const slug = counter.getAttribute('data-slug');
      if (!slug) return;
      
      const countElement = counter.querySelector('.view-count');
      if (!countElement) return;
      
      countElement.textContent = getViewCount(slug).toString();
    });
  }
  
  // Inicializar contadores al cargar la p치gina
  document.addEventListener('DOMContentLoaded', () => {
    updateViewCounters();
  });
  
  // Para p치ginas que utilizan transiciones de Astro View
  document.addEventListener('astro:page-load', () => {
    updateViewCounters();
  });
</script> 