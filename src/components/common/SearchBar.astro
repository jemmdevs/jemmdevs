<div class="search-container relative max-w-md mx-auto">
  <div class="relative">
    <input 
      type="text" 
      id="search-input" 
      placeholder="Search posts..." 
      class="w-full px-4 py-2 border rounded-lg border-gray-300 dark:border-gray-700 bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-primary"
    />
    <button type="button" class="absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-500 dark:text-gray-400">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
      </svg>
    </button>
  </div>
  
  <div id="search-results" class="absolute z-10 w-full mt-2 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-700 rounded-lg shadow-lg overflow-hidden hidden">
    <div class="max-h-96 overflow-y-auto p-2" id="results-container">
      <!-- Search results will be inserted here -->
    </div>
  </div>
</div>

<script>
  // This script would normally fetch and search through posts
  // Simplified version for demonstration
  const searchInput = document.getElementById('search-input');
  const searchResults = document.getElementById('search-results');
  const resultsContainer = document.getElementById('results-container');
  
  searchInput?.addEventListener('input', (e) => {
    const query = (e.target as HTMLInputElement).value.trim();
    
    if (query.length > 2) {
      // Show the results container
      searchResults?.classList.remove('hidden');
      
      // In a real implementation, this would call the search function
      // and display real results from your blog posts
      
      // Placeholder for demonstration
      resultsContainer!.innerHTML = `
        <div class="p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded">
          <p class="font-semibold">Search for: ${query}</p>
          <p class="text-sm text-gray-500 dark:text-gray-400">
            Actual search functionality would be implemented with client-side JavaScript
          </p>
        </div>
      `;
    } else {
      searchResults?.classList.add('hidden');
    }
  });
  
  // Close search results when clicking outside
  document.addEventListener('click', (e) => {
    if (!searchInput?.contains(e.target as Node) && !searchResults?.contains(e.target as Node)) {
      searchResults?.classList.add('hidden');
    }
  });
</script> 